
/*
Her bir futbolcunun 
Yaþýný, yaþ grubunu, futbolcunun puanýný, kaç kez yedek kadroda çýktýðýný,
kaç kez asýl kadroda çýktýðýný kaç farklý takýmda oynadýðýný,
Toplam kaç maç yaptýðýný, kaç yýldýz futbol oynadýðýný yazalým. 
*/


SELECT * FROM LAB_PLAYER WHERE PLAYER_NAME LIKE '%Sefa%'


CREATE FUNCTION DBO.GETPLAYERINFO (@PLAYERID AS INT)
RETURNS TABLE
AS 
RETURN


SELECT PLAYER_API_ID,PLAYER_NAME,
(SELECT TOP 1 TEAM FROM LAB_MATCH_PLAYER WHERE PLAYERID = P.PLAYER_API_ID ORDER BY DATE_ DESC) CURRENTTEAM,
DATEDIFF(YEAR,BIRTHDATE,GETDATE()) AGE,
CASE 
	WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) < 20 THEN 'Yaþý 20 den küçük'
	WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) BETWEEN 20 AND 30 THEN 'Yaþý 20 ile 30 arasýnda'
	WHEN DATEDIFF(YEAR,BIRTHDATE,GETDATE()) > 40 THEN 'Yaþý 40 dan büyük'
END AS AGE_GRUP,
RATING,
(SELECT COUNT(*) FROM LAB_MATCH_PLAYER WHERE PLAYERID = P.PLAYER_API_ID AND PLAYERTYPE = 'REAL' ) AS REALCOUNT,
(SELECT COUNT(*) FROM LAB_MATCH_PLAYER WHERE PLAYERID = P.PLAYER_API_ID AND PLAYERTYPE = 'BACKUP') AS BACKUPCOUNT,
(SELECT COUNT(DISTINCT TEAM) FROM LAB_MATCH_PLAYER WHERE PLAYERID = P.PLAYER_API_ID) TEAMCOUNT,
(SELECT COUNT(*) FROM LAB_MATCH_PLAYER WHERE PLAYERID = P.PLAYER_API_ID) TOTALMATCHCOUNT,
(SELECT MIN(DATE_) FROM LAB_MATCH_PLAYER WHERE PLAYERID = P.PLAYER_API_ID) FIRSTMATCHDATE,
(SELECT MAX(DATE_) FROM LAB_MATCH_PLAYER WHERE PLAYERID = P.PLAYER_API_ID) LASTMATCHDATE

FROM LAB_PLAYER P WHERE P.PLAYER_API_ID = @PLAYERID




SELECT * FROM LAB_PLAYER P
CROSS APPLY dbo.GETPLAYERINFO(P.PLAYER_API_ID) INF


--cross apply fonksiyonlarý getirme iþine yarar.